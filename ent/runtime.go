// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/vicanso/elite/ent/configuration"
	"github.com/vicanso/elite/ent/novelsource"
	"github.com/vicanso/elite/ent/schema"
	"github.com/vicanso/elite/ent/user"
	"github.com/vicanso/elite/ent/userlogin"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	configurationMixin := schema.Configuration{}.Mixin()
	configurationMixinFields0 := configurationMixin[0].Fields()
	configurationMixinFields1 := configurationMixin[1].Fields()
	configurationFields := schema.Configuration{}.Fields()
	_ = configurationFields
	// configurationDescCreatedAt is the schema descriptor for created_at field.
	configurationDescCreatedAt := configurationMixinFields0[0].Descriptor()
	// configuration.DefaultCreatedAt holds the default value on creation for the created_at field.
	configuration.DefaultCreatedAt = configurationDescCreatedAt.Default.(func() time.Time)
	// configurationDescUpdatedAt is the schema descriptor for updated_at field.
	configurationDescUpdatedAt := configurationMixinFields0[1].Descriptor()
	// configuration.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	configuration.DefaultUpdatedAt = configurationDescUpdatedAt.Default.(func() time.Time)
	// configuration.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	configuration.UpdateDefaultUpdatedAt = configurationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// configurationDescStatus is the schema descriptor for status field.
	configurationDescStatus := configurationMixinFields1[0].Descriptor()
	// configuration.DefaultStatus holds the default value on creation for the status field.
	configuration.DefaultStatus = schema.Status(configurationDescStatus.Default.(int8))
	// configuration.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	configuration.StatusValidator = configurationDescStatus.Validators[0].(func(int8) error)
	// configurationDescName is the schema descriptor for name field.
	configurationDescName := configurationFields[0].Descriptor()
	// configuration.NameValidator is a validator for the "name" field. It is called by the builders before save.
	configuration.NameValidator = configurationDescName.Validators[0].(func(string) error)
	// configurationDescOwner is the schema descriptor for owner field.
	configurationDescOwner := configurationFields[2].Descriptor()
	// configuration.OwnerValidator is a validator for the "owner" field. It is called by the builders before save.
	configuration.OwnerValidator = configurationDescOwner.Validators[0].(func(string) error)
	// configurationDescData is the schema descriptor for data field.
	configurationDescData := configurationFields[3].Descriptor()
	// configuration.DataValidator is a validator for the "data" field. It is called by the builders before save.
	configuration.DataValidator = configurationDescData.Validators[0].(func(string) error)
	novelsourceMixin := schema.NovelSource{}.Mixin()
	novelsourceMixinFields0 := novelsourceMixin[0].Fields()
	novelsourceFields := schema.NovelSource{}.Fields()
	_ = novelsourceFields
	// novelsourceDescCreatedAt is the schema descriptor for created_at field.
	novelsourceDescCreatedAt := novelsourceMixinFields0[0].Descriptor()
	// novelsource.DefaultCreatedAt holds the default value on creation for the created_at field.
	novelsource.DefaultCreatedAt = novelsourceDescCreatedAt.Default.(func() time.Time)
	// novelsourceDescUpdatedAt is the schema descriptor for updated_at field.
	novelsourceDescUpdatedAt := novelsourceMixinFields0[1].Descriptor()
	// novelsource.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	novelsource.DefaultUpdatedAt = novelsourceDescUpdatedAt.Default.(func() time.Time)
	// novelsource.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	novelsource.UpdateDefaultUpdatedAt = novelsourceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// novelsourceDescName is the schema descriptor for name field.
	novelsourceDescName := novelsourceFields[0].Descriptor()
	// novelsource.NameValidator is a validator for the "name" field. It is called by the builders before save.
	novelsource.NameValidator = novelsourceDescName.Validators[0].(func(string) error)
	// novelsourceDescAuthor is the schema descriptor for author field.
	novelsourceDescAuthor := novelsourceFields[1].Descriptor()
	// novelsource.AuthorValidator is a validator for the "author" field. It is called by the builders before save.
	novelsource.AuthorValidator = novelsourceDescAuthor.Validators[0].(func(string) error)
	// novelsourceDescSource is the schema descriptor for source field.
	novelsourceDescSource := novelsourceFields[2].Descriptor()
	// novelsource.SourceValidator is a validator for the "source" field. It is called by the builders before save.
	novelsource.SourceValidator = novelsourceDescSource.Validators[0].(func(int) error)
	// novelsourceDescSourceID is the schema descriptor for source_id field.
	novelsourceDescSourceID := novelsourceFields[3].Descriptor()
	// novelsource.SourceIDValidator is a validator for the "source_id" field. It is called by the builders before save.
	novelsource.SourceIDValidator = novelsourceDescSourceID.Validators[0].(func(int) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	userMixinFields1 := userMixin[1].Fields()
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescStatus is the schema descriptor for status field.
	userDescStatus := userMixinFields1[0].Descriptor()
	// user.DefaultStatus holds the default value on creation for the status field.
	user.DefaultStatus = schema.Status(userDescStatus.Default.(int8))
	// user.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	user.StatusValidator = userDescStatus.Validators[0].(func(int8) error)
	// userDescAccount is the schema descriptor for account field.
	userDescAccount := userFields[0].Descriptor()
	// user.AccountValidator is a validator for the "account" field. It is called by the builders before save.
	user.AccountValidator = func() func(string) error {
		validators := userDescAccount.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(account string) error {
			for _, fn := range fns {
				if err := fn(account); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	userloginMixin := schema.UserLogin{}.Mixin()
	userloginMixinFields0 := userloginMixin[0].Fields()
	userloginFields := schema.UserLogin{}.Fields()
	_ = userloginFields
	// userloginDescCreatedAt is the schema descriptor for created_at field.
	userloginDescCreatedAt := userloginMixinFields0[0].Descriptor()
	// userlogin.DefaultCreatedAt holds the default value on creation for the created_at field.
	userlogin.DefaultCreatedAt = userloginDescCreatedAt.Default.(func() time.Time)
	// userloginDescUpdatedAt is the schema descriptor for updated_at field.
	userloginDescUpdatedAt := userloginMixinFields0[1].Descriptor()
	// userlogin.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	userlogin.DefaultUpdatedAt = userloginDescUpdatedAt.Default.(func() time.Time)
	// userlogin.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	userlogin.UpdateDefaultUpdatedAt = userloginDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userloginDescAccount is the schema descriptor for account field.
	userloginDescAccount := userloginFields[0].Descriptor()
	// userlogin.AccountValidator is a validator for the "account" field. It is called by the builders before save.
	userlogin.AccountValidator = userloginDescAccount.Validators[0].(func(string) error)
}
